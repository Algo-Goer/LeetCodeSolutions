/*
找到一个数字的K美丽值
一个整数num的k美丽值定义为num中符合以下条件的子字符串数目：
1. 子字符串长度为k
2. 子字符串能整除num
给你整数num和k，请你返回num的k美丽值

注意：
允许有前缀0
0不能整除任何值
一个子字符串是一个字符串里的连续一段字符序列

输入：num = 240, k = 2
输出：2
解释：以下是 num 里长度为 k 的子字符串：
- "240" 中的 "24" ：24 能整除 240 。
- "240" 中的 "40" ：40 能整除 240 。
所以，k 美丽值为 2 。

输入：num = 430043, k = 2
输出：2
解释：以下是 num 里长度为 k 的子字符串：
- "430043" 中的 "43" ：43 能整除 430043 。
- "430043" 中的 "30" ：30 不能整除 430043 。
- "430043" 中的 "00" ：0 不能整除 430043 。
- "430043" 中的 "04" ：4 不能整除 430043 。
- "430043" 中的 "43" ：43 能整除 430043 。
所以，k 美丽值为 2 。
*/
// simulation，注意细节i + k - 1 < s.size()，以防33 2这类输出WA，正确为1，但会输出2
class Solution
{
public:
    int divisorSubstrings(int num, int k)
    {
        int cnt = 0;
        string s = to_string(num);
        for (int i = 0; i + k - 1 < s.size(); ++i) // i < s.size(); WA
        {
            // substr()，每k个一组分隔
            string str = s.substr(i, k);
            int n = stoi(str);
            if (n && num % n == 0)
                ++cnt;
        }
        return cnt;
    }
};